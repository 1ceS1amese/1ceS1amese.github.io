<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Newstarctf2024</title>
      <link href="/2025/07/10/Before_Sunset/"/>
      <url>/2025/07/10/Before_Sunset/</url>
      
        <content type="html"><![CDATA[<h1 id="Before-Sunset"><a href="#Before-Sunset" class="headerlink" title="Before_Sunset"></a>Before_Sunset</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha256</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> *</span><br><span class="line">flag = <span class="string">b&#x27;flag&#123;XXXXXXXXX&#125;&#x27;</span></span><br><span class="line">note = <span class="string">b&#x27;Before_Sunset*xt&#x27;</span></span><br><span class="line">keys = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">    key = <span class="built_in">bytes</span>(choices(note,k=<span class="number">3</span>))</span><br><span class="line">    keys.append(sha256(key).digest())</span><br><span class="line">cipher = <span class="string">b&#x27;happy_newyear!!!&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">    cipher = AES.new(keys[i], AES.MODE_ECB).encrypt(cipher) </span><br><span class="line">enkey = sha256(<span class="string">b&quot;&quot;</span>.join(keys)).digest()</span><br><span class="line">enflag = AES.new(enkey,AES.MODE_ECB).encrypt(pad(flag,AES.block_size))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;cipher = <span class="subst">&#123;cipher&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;enflag = <span class="subst">&#123;enflag&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">cipher = b&#x27;4\xf6\x89\x81:\xd7\xf4\xc4\xad\xb1)\x99\xb1l\xe2\x7f&#x27;</span></span><br><span class="line"><span class="string">enflag = b&#x27;\x964\xdcq\xcc\xe9\xde\xfe=\xfb\x08\\\x9e\xe3\xf5\xef^\x9c\x11\xaa\xb8\x97\xe61\x1ee\xe4dV\x0c\x1c\xf7 \xabX]\x92\xd6\xa3\xdegD\xbb\xbd\x98\x90\xeb~&#x27;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>aaaaa</span><br></pre></td></tr></table></figure><p>用 <code>note</code> 生成了 4 个密钥（每个是从 <code>note</code> 中随机选 3 字节，再 SHA256 得到 32 字节 AES 密钥）</p><p>用这些密钥对一个固定明文 <code>P = b&quot;happy_newyear!!!&quot;</code> 连续加密 4 次，得到 <code>cipher = C4</code>；</p><p>把这 4 个密钥拼起来 SHA256 出 <code>enkey</code>，用它对 flag 做 AES-ECB 加密（带 PKCS#7 padding），得到 <code>enflag</code>。</p><h2 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h2><p>采用的是相遇攻击的思想</p><p>所有 <code>(K0, K1)</code> 组合下的结果 <code>c2</code> 存进字典 <code>map_fw</code>，键是加密结果，值是 K0 和 K1 的索引。</p><p>构建完后，<code>map_fw</code> 是一个【中间密文 → 密钥对】的快速查找表。</p><p> 对每个 <code>(K3, K2)</code> 组合，从最终密文 <code>C4</code> 开始反向解密： </p><p> 判断 <code>c2</code> 是否在前向字典里 —— 如果找到了，说明这两个密钥和前面对应的 <code>(K0,K1)</code> 正好组成了一组正确密钥</p><p>简单来说就是一边通过前半段的寻找建字典然后一边查</p><h2 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> product</span><br><span class="line"><span class="keyword">from</span> hashlib   <span class="keyword">import</span> sha256</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher       <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> unpad</span><br><span class="line"></span><br><span class="line">P   = <span class="string">b&quot;happy_newyear!!!&quot;</span></span><br><span class="line">C4  = <span class="string">b&quot;4\xf6\x89\x81:\xd7\xf4\xc4\xad\xb1)\x99\xb1l\xe2\x7f&quot;</span></span><br><span class="line">enflag = <span class="string">b&#x27;\x964\xdcq\xcc\xe9\xde\xfe=\xfb\x08\\\x9e\xe3\xf5\xef^\x9c\x11\xaa\xb8\x97\xe61\x1ee\xe4dV\x0c\x1c\xf7 \xabX]\x92\xd6\xa3\xdegD\xbb\xbd\x98\x90\xeb~&#x27;</span></span><br><span class="line">note = <span class="string">b&quot;Before_Sunset*xt&quot;</span></span><br><span class="line"></span><br><span class="line">key3_list = [<span class="built_in">bytes</span>(k) <span class="keyword">for</span> k <span class="keyword">in</span> product(note, repeat=<span class="number">3</span>)]</span><br><span class="line">aes_keys  = [sha256(k3).digest() <span class="keyword">for</span> k3 <span class="keyword">in</span> key3_list]</span><br><span class="line"></span><br><span class="line">map_fw = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i, K0 <span class="keyword">in</span> <span class="built_in">enumerate</span>(aes_keys):</span><br><span class="line">    c1 = AES.new(K0, AES.MODE_ECB).encrypt(P)</span><br><span class="line">    <span class="keyword">for</span> j, K1 <span class="keyword">in</span> <span class="built_in">enumerate</span>(aes_keys):</span><br><span class="line">        c2 = AES.new(K1, AES.MODE_ECB).encrypt(c1)</span><br><span class="line">        map_fw[c2] = (i, j)   </span><br><span class="line"></span><br><span class="line">found = <span class="literal">None</span></span><br><span class="line"><span class="keyword">for</span> l, K3 <span class="keyword">in</span> <span class="built_in">enumerate</span>(aes_keys):</span><br><span class="line">    c3 = AES.new(K3, AES.MODE_ECB).decrypt(C4)</span><br><span class="line">    <span class="keyword">for</span> k, K2 <span class="keyword">in</span> <span class="built_in">enumerate</span>(aes_keys):</span><br><span class="line">        c2_prime = AES.new(K2, AES.MODE_ECB).decrypt(c3)</span><br><span class="line">        <span class="keyword">if</span> c2_prime <span class="keyword">in</span> map_fw:</span><br><span class="line">            i, j = map_fw[c2_prime]</span><br><span class="line">            K0, K1 = aes_keys[i], aes_keys[j]</span><br><span class="line">            found = (K0, K1, K2, K3)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> found:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> found:</span><br><span class="line">    <span class="keyword">raise</span> ValueError(<span class="string">&quot;没找到密钥组合！&quot;</span>)</span><br><span class="line"></span><br><span class="line">K0, K1, K2, K3 = found</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;找到四个 AES 密钥！&quot;</span>)</span><br><span class="line">enkey = sha256(K0 + K1 + K2 + K3).digest()</span><br><span class="line">plain = unpad(AES.new(enkey, AES.MODE_ECB).decrypt(enflag), AES.block_size)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Flag =&quot;</span>, plain)</span><br><span class="line"><span class="comment">#flag&#123;W&amp;_W1II-3Nc0unter_n3*T=y@aR&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2025/06/28/test/"/>
      <url>/2025/06/28/test/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/06/28/hello-world/"/>
      <url>/2025/06/28/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
